name: Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-and-integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps --force
    
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run unit tests
        run: npm run test
      
      - name: Run integration tests
        run: npm run test:integration
      
      - name: Upload test coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: frontend/coverage

  e2e-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Build the app
        run: npm run build
      
      - name: Start the app
        run: npm run start & 
      
      - name: Wait for app to start
        run: |
          # Wait for the app to be available on port 3000
          timeout 60s bash -c 'until nc -z localhost 3000; do sleep 1; done' || exit 1
      
      - name: Run Playwright tests
        run: PLAYWRIGHT_HTML_REPORT=playwright-report npx playwright test
        env:
          CI: true
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report